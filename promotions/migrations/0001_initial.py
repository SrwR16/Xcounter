# Generated by Django 5.2.1 on 2025-05-10 15:39

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('bookings', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='TierBenefit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tier', models.CharField(choices=[('STANDARD', 'Standard'), ('SILVER', 'Silver'), ('GOLD', 'Gold'), ('PLATINUM', 'Platinum'), ('VIP', 'VIP')], max_length=20, unique=True)),
                ('description', models.TextField(blank=True)),
                ('booking_discount', models.DecimalField(decimal_places=2, default=0, help_text='Percentage discount on bookings', max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('monthly_free_tickets', models.PositiveIntegerField(default=0, help_text='Number of free tickets awarded monthly')),
                ('early_booking_days', models.PositiveIntegerField(default=0, help_text='Days of early access to booking')),
                ('points_multiplier', models.DecimalField(decimal_places=2, default=1.0, help_text='Multiplier for points earning', max_digits=5, validators=[django.core.validators.MinValueValidator(1.0)])),
            ],
            options={
                'verbose_name': 'Tier Benefit',
                'verbose_name_plural': 'Tier Benefits',
                'ordering': ['tier'],
            },
        ),
        migrations.CreateModel(
            name='CustomerProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tier', models.CharField(choices=[('STANDARD', 'Standard'), ('SILVER', 'Silver'), ('GOLD', 'Gold'), ('PLATINUM', 'Platinum'), ('VIP', 'VIP')], default='STANDARD', max_length=20)),
                ('tier_override', models.CharField(blank=True, choices=[('STANDARD', 'Standard'), ('SILVER', 'Silver'), ('GOLD', 'Gold'), ('PLATINUM', 'Platinum'), ('VIP', 'VIP')], help_text='Manually set customer tier (overrides automatic calculation)', max_length=20, null=True)),
                ('points', models.PositiveIntegerField(default=0)),
                ('lifetime_spending', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('free_tickets_remaining', models.PositiveIntegerField(default=0)),
                ('free_tickets_reset_date', models.DateField(default=django.utils.timezone.now)),
                ('last_tier_check', models.DateTimeField(default=django.utils.timezone.now)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='loyalty_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Customer Profile',
                'verbose_name_plural': 'Customer Profiles',
            },
        ),
        migrations.CreateModel(
            name='PointsTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_type', models.CharField(choices=[('EARNING', 'Points Earned'), ('SPENDING', 'Points Spent'), ('ADJUSTMENT', 'Manual Adjustment'), ('EXPIRY', 'Points Expired')], max_length=20)),
                ('points', models.IntegerField()),
                ('reference', models.CharField(blank=True, max_length=255, null=True)),
                ('transaction_date', models.DateTimeField(auto_now_add=True)),
                ('booking', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='bookings.booking')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to='promotions.customerprofile')),
            ],
            options={
                'ordering': ['-transaction_date'],
            },
        ),
        migrations.AddIndex(
            model_name='customerprofile',
            index=models.Index(fields=['tier'], name='promotions__tier_420990_idx'),
        ),
        migrations.AddIndex(
            model_name='customerprofile',
            index=models.Index(fields=['lifetime_spending'], name='promotions__lifetim_e12a1f_idx'),
        ),
        migrations.AddIndex(
            model_name='pointstransaction',
            index=models.Index(fields=['-transaction_date'], name='promotions__transac_949fa3_idx'),
        ),
        migrations.AddIndex(
            model_name='pointstransaction',
            index=models.Index(fields=['customer', 'transaction_type'], name='promotions__custome_b9f29f_idx'),
        ),
    ]
